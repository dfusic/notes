{"version":3,"sources":["components/Container/index.js","context/index.js","components/MarkdownPreview/index.js","components/Overlay/index.js","components/Modal/index.js","components/Flexbox/index.js","components/Button/index.js","hooks/index.js","icons/back.svg","icons/delete.svg","icons/edit.svg","icons/save.svg","components/NoteModal/index.js","components/SingleNote/index.js","components/NotesList/index.js","App.js","reportWebVitals.js","index.js"],"names":["Container","children","StyledContainer","styled","div","NotesContext","createContext","NotesProvider","useState","notes","setNotes","memoizedNotes","useMemo","useEffect","localStorageNotes","JSON","parse","localStorage","getItem","setItem","stringify","Provider","value","MarkdownPreview","markdown","StyledMarkdownPreview","ReactMarkdown","defaultProps","Overlay","centerChildren","StyledOverlay","$centerChildren","Modal","StyledModal","StyledModalHeader","StyledModalContent","Header","Content","Flexbox","props","flexDirection","justifyContent","alignItems","StyledFlexbox","$flexDirection","$justifyContent","$alignItems","Button","onClick","disabled","StyledButton","button","useNotes","useContext","add","id","content","remove","filter","note","get","find","save","newNotes","map","NoteModal","onClose","addNewNote","isEditing","setIsEditing","textareaValue","setTextareaValue","length","alert","uuid","src","BackIcon","alt","StyledIcon","SaveIcon","EditIcon","window","confirm","DeleteIcon","StyledTextArea","autoFocus","onChange","e","currentTextareaValue","target","textarea","img","SingleNote","showModal","setShowModal","StyledSingleNote","$addNewNote","className","StyledMarkdownPreviewWrapper","li","span","StyledNotesList","ul","NotesList","notesRender","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19ae7ff8.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = ({ children }) => (\n  <StyledContainer>{children}</StyledContainer>\n);\n\nexport default Container;\n\nconst StyledContainer = styled.div`\n  width: calc(100% - 150px);\n  margin: 0 auto;\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  font-family: 'Roboto', sans-serif;\n\n  @media screen and (max-width: 985px) {\n    justify-content: center;\n  }\n`;\n","import React, { createContext, useState, useEffect, useMemo } from 'react';\n\nconst NotesContext = createContext();\n\nconst NotesProvider = ({ children }) => {\n  const [notes, setNotes] = useState([]);\n\n  // if the notes didn't change then return the memoized/\"cached\" notes\n  const memoizedNotes = useMemo(() => notes, [notes]);\n\n  // componentDidMount\n  useEffect(() => {\n    const localStorageNotes = JSON.parse(localStorage.getItem('notes'));\n    if (localStorageNotes && localStorageNotes.notes) {\n      setNotes(localStorageNotes.notes);\n    }\n  }, []);\n\n  // on notes update save it to the local storage\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify({ notes: memoizedNotes }));\n  }, [memoizedNotes]);\n\n  return (\n    <NotesContext.Provider value={{ notes: memoizedNotes, setNotes }}>\n      {children}\n    </NotesContext.Provider>\n  );\n};\n\nexport { NotesContext, NotesProvider };\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ReactMarkdown from 'react-markdown';\n\nconst MarkdownPreview = ({ markdown }) => (\n  <StyledMarkdownPreview>{markdown}</StyledMarkdownPreview>\n);\n\nconst StyledMarkdownPreview = styled(ReactMarkdown)`\n  font-family: 'Merriweather', serif;\n  display: block;\n`;\n\nMarkdownPreview.propTypes = {\n  markdown: PropTypes.string\n};\n\nMarkdownPreview.defaultProps = {\n  markdown: ''\n};\n\nexport default MarkdownPreview;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport PropTypes from 'prop-types';\n\nconst Overlay = ({ children, centerChildren }) => (\n  <StyledOverlay $centerChildren={centerChildren}>{children}</StyledOverlay>\n);\n\nconst StyledOverlay = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  z-index: 999;\n  background-color: rgba(0, 0, 0, 0.25);\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: ${({ $centerChildren }) =>\n    $centerChildren ? 'center' : 'flex-start'};\n  align-items: ${({ $centerChildren }) =>\n    $centerChildren ? 'center' : 'flex-start'};\n`;\n\nOverlay.propTypes = {\n  centerChildren: PropTypes.bool\n};\n\nOverlay.defaultProps = {\n  centerChildren: false\n};\n\nexport default Overlay;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Overlay from '../Overlay';\n\nconst Modal = ({ children }) => (\n  <Overlay centerChildren>\n    <StyledModal>{children}</StyledModal>\n  </Overlay>\n);\n\nconst Header = ({ children }) => (\n  <StyledModalHeader>{children}</StyledModalHeader>\n);\n\nconst Content = ({ children }) => (\n  <StyledModalContent>{children}</StyledModalContent>\n);\n\nconst StyledModal = styled.div`\n  width: 800px;\n  height: 900px;\n  display: block;\n  background-color: #ffffff;\n  box-sizing: border-box;\n  padding: 50px;\n`;\n\nconst StyledModalHeader = styled.div`\n  display: block;\n  width: 100%;\n  height: 80px;\n`;\n\nconst StyledModalContent = styled.div`\n  display: block;\n  width: 100%;\n  height: 710px;\n  overflow-y: auto;\n`;\n\nModal.Header = Header;\nModal.Content = Content;\n\nexport default Modal;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Flexbox = props => {\n  const { flexDirection, justifyContent, alignItems, children } = props;\n\n  return (\n    <StyledFlexbox\n      $flexDirection={flexDirection}\n      $justifyContent={justifyContent}\n      $alignItems={alignItems}\n    >\n      {children}\n    </StyledFlexbox>\n  );\n};\n\nconst StyledFlexbox = styled.div`\n  display: flex;\n  flex-direction: ${({ $flexDirection }) => $flexDirection || 'row'};\n  align-items: ${({ $alignItems }) => $alignItems || 'flex-start'};\n  justify-content: ${({ $justifyContent }) => $justifyContent || 'flex-start'};\n`;\n\nFlexbox.propTypes = {\n  flexDirection: PropTypes.oneOf(['row', 'column']),\n  justifyContent: PropTypes.oneOf([\n    'flex-start',\n    'center',\n    'flex-end',\n    'space-between'\n  ]),\n  alignItems: PropTypes.oneOf([\n    'flex-start',\n    'center',\n    'flex-end',\n    'space-between'\n  ])\n};\n\nFlexbox.defaultProps = {\n  flexDirection: 'row',\n  justifyContent: 'flex-start',\n  alignItems: 'flex-start'\n};\n\nexport default Flexbox;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Button = props => {\n  const { children, onClick, disabled } = props;\n\n  return (\n    <StyledButton onClick={onClick} disabled={disabled}>\n      {children}\n    </StyledButton>\n  );\n};\n\nconst StyledButton = styled.button`\n  background-color: transparent;\n  cursor: pointer;\n  border: none;\n  outline: none;\n`;\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};\n\nButton.defaultProps = {\n  disabled: false\n};\n\nexport default Button;\n","import { useContext } from 'react';\nimport { NotesContext } from '../context/index';\n\nconst useNotes = () => {\n  const { notes, setNotes } = useContext(NotesContext);\n\n  const add = ({ id, content }) => {\n    setNotes([...notes, { id, content }]);\n  };\n  const remove = ({ id }) => {\n    setNotes(notes.filter(note => note.id !== id));\n  };\n  const get = ({ id }) => notes.find(note => note.id === id);\n\n  const save = ({ id, content }) => {\n    const newNotes = notes.map(note => {\n      if (note.id === id) {\n        return {\n          ...note,\n          content\n        };\n      }\n      return note;\n    });\n\n    setNotes(newNotes);\n  };\n\n  return {\n    add,\n    remove,\n    get,\n    save\n  };\n};\n\nexport default useNotes;\n","export default __webpack_public_path__ + \"static/media/back.5268c3a5.svg\";","export default __webpack_public_path__ + \"static/media/delete.ecfcb70f.svg\";","export default __webpack_public_path__ + \"static/media/edit.d8196503.svg\";","export default __webpack_public_path__ + \"static/media/save.42e32971.svg\";","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport uuid from 'react-uuid';\n\nimport Modal from '../Modal';\nimport Flexbox from '../Flexbox';\nimport Button from '../Button';\nimport MarkdownPreview from '../MarkdownPreview';\n\nimport useNotes from '../../hooks';\n\nimport { BackIcon, EditIcon, DeleteIcon, SaveIcon } from '../../icons';\n\nconst NoteModal = props => {\n  const { id, onClose, addNewNote } = props;\n\n  const { get, remove, add, save } = useNotes();\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [textareaValue, setTextareaValue] = useState('');\n\n  useEffect(() => {\n    const note = get({ id });\n    if (note?.content) {\n      setTextareaValue(note.content);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  useEffect(() => {\n    if (addNewNote) {\n      setTextareaValue('');\n      setIsEditing(true);\n    }\n  }, [addNewNote]);\n\n  const toggleEditMode = () => setIsEditing(!isEditing);\n\n  const onModalClose = () => {\n    if (addNewNote) {\n      if (textareaValue.length === 0) {\n        // eslint-disable-next-line no-alert\n        alert(\"You didn't add any content to the note. Closing. \");\n        onClose();\n        return;\n      }\n\n      add({\n        id: uuid(),\n        content: textareaValue\n      });\n    }\n\n    if (!addNewNote) {\n      save({\n        id,\n        content: textareaValue\n      });\n    }\n\n    onClose();\n  };\n\n  const onDelete = () => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Are you sure you want to delete this note?')) {\n      remove({ id });\n      onClose();\n    }\n  };\n\n  const onTextareaChange = e => {\n    // immutability\n    let currentTextareaValue = textareaValue;\n    currentTextareaValue = e.target.value;\n    setTextareaValue(currentTextareaValue);\n  };\n\n  return (\n    <Modal>\n      <Modal.Header>\n        <Flexbox\n          flexDirection=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Button onClick={onModalClose}>\n            <img src={BackIcon} alt=\"Go back\" />\n          </Button>\n          <Flexbox\n            flexDirection=\"row\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Button onClick={toggleEditMode}>\n              <StyledIcon src={isEditing ? SaveIcon : EditIcon} alt=\"Edit\" />\n            </Button>\n            <Button onClick={onDelete}>\n              <StyledIcon src={DeleteIcon} alt=\"Delete\" />\n            </Button>\n          </Flexbox>\n        </Flexbox>\n      </Modal.Header>\n      <Modal.Content>\n        {isEditing ? (\n          <StyledTextArea\n            autoFocus\n            value={textareaValue}\n            onChange={onTextareaChange}\n          />\n        ) : (\n          <MarkdownPreview markdown={textareaValue} />\n        )}\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default NoteModal;\n\nNoteModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired\n};\n\nconst StyledTextArea = styled.textarea`\n  display: block;\n  width: 99%;\n  height: 691px;\n  overflow-x: hidden;\n  border: none;\n  font-sioze: 14px;\n  font-family: 'Roboto Mono', monospace;\n  resize: none;\n\n  &:focus,\n  &:hover {\n    border: none;\n    outline: none;\n  }\n`;\n\nconst StyledIcon = styled.img`\n  height: 19px;\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n// import uuid from 'react-uuid';\n\nimport MarkdownPreview from '../MarkdownPreview';\nimport NoteModal from '../NoteModal';\n\nconst SingleNote = props => {\n  const { id, content, addNewNote } = props;\n\n  // used for showing/not showing modal\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => setShowModal(true);\n  const closeModal = () => setShowModal(false);\n\n  return (\n    <>\n      {showModal && (\n        <NoteModal onClose={closeModal} id={id} addNewNote={addNewNote} />\n      )}\n      <StyledSingleNote\n        onClick={openModal}\n        id={id}\n        $addNewNote={addNewNote}\n        className=\"single-note\"\n      >\n        {addNewNote ? (\n          <p className=\"add-new-note-plus\">+</p>\n        ) : (\n          <StyledMarkdownPreviewWrapper>\n            <MarkdownPreview markdown={content} />\n          </StyledMarkdownPreviewWrapper>\n        )}\n      </StyledSingleNote>\n    </>\n  );\n};\n\nSingleNote.defaultProps = {\n  addNewNote: false\n};\n\nconst StyledSingleNote = styled.li`\n  width: 200px;\n  height: 200px;\n  background-color: ${({ $addNewNote }) =>\n    $addNewNote ? '#B90445' : '#fdfdfd;'};\n  color: ${({ $addNewNote }) => ($addNewNote ? 'white' : 'black')};\n  border-radius: 10px;\n  box-shadow: 1px 1px 10px rgba(0, 0, 0, 0.15);\n  box-sizing: border-box;\n  padding: 20px;\n  cursor: ${({ onClick }) => (onClick ? 'pointer' : 'auto')};\n  border: 3px solid #fdfdfd;\n  transition: border-color 200ms ease-in-out;\n  user-select: none;\n\n  display: flex;\n  justify-content: ${({ $addNewNote }) =>\n    $addNewNote ? 'center' : 'flex-start'};\n  align-items: ${({ $addNewNote }) => ($addNewNote ? 'center' : 'flex-start')};\n\n  position: relative;\n  transform-origin: top left;\n  overflow: hidden;\n  z-index: 998;\n\n  &:hover,\n  &:focus {\n    border-color: ${({ $addNewNote }) => ($addNewNote ? 'none' : '#b90445')};\n  }\n\n  & > .add-new-note-plus {\n    color: white;\n    font-size: 64px;\n\n    font-family: 'Roboto', sans-serif;\n  }\n`;\n\nconst StyledMarkdownPreviewWrapper = styled.span`\n  display: block;\n  width: 100%;\n  height: 100%;\n\n  transform: scale(0.25) translate(calc(50% + 80px), calc(50% + 80px));\n  position: absolute;\n  top: -50%;\n  left: -50%;\n`;\n\nSingleNote.propTypes = {\n  id: PropTypes.string.isRequired,\n  addNewNote: PropTypes.bool\n};\n\nexport default SingleNote;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\n\nimport { NotesContext } from '../../context/index';\nimport SingleNote from '../SingleNote';\n\nconst NotesList = () => {\n  const { notes } = useContext(NotesContext);\n\n  const notesRender = notes.map(note => (\n    <SingleNote id={note.id} key={note.id} content={note.content} />\n  ));\n\n  return (\n    <StyledNotesList>\n      <SingleNote addNewNote id=\"add-new-note\" />\n      {notesRender}\n    </StyledNotesList>\n  );\n};\n\nconst StyledNotesList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin: 80px 0;\n  text-align: left;\n  justify-content: flex-start;\n\n  & .single-note {\n    margin: 30px 30px;\n  }\n\n  @media screen and (max-width: 985px) {\n    justify-content: center;\n  }\n`;\n\nexport default NotesList;\n","import React from 'react';\nimport Container from './components/Container';\nimport NotesList from './components/NotesList';\n\nimport './fonts/index.css';\n\nconst App = () => (\n  <div>\n    <Container>\n      <NotesList />\n    </Container>\n  </div>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { NotesProvider } from './context/index';\n\nReactDOM.render(\n  <React.StrictMode>\n    <NotesProvider>\n      <App />\n    </NotesProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}